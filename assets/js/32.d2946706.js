(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{425:function(t,s,a){"use strict";a.r(s);var n=a(54),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"проваидеры"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#проваидеры"}},[t._v("#")]),t._v(" Провайдеры")]),t._v(" "),a("p",[t._v('Провайдеры - это фундаментальная концепция в Nest. Многие из основных классов Nest могут рассматриваться как\nпровайдеры - сервисы, репозитории, фабрики, хелперы и так далее. Основная идея провайдера заключается в том, что\nон может быть внедрен как зависимость; это означает, что объекты могут создавать различные отношения друг с другом,\nа функция "подключения" экземпляров объектов может быть в значительной степени делегирована системе выполнения Nest.')]),t._v(" "),a("img",{attrs:{src:"/Components_1.png"}}),t._v(" "),a("p",[t._v("В предыдущей главе мы создали простой контроллер "),a("code",[t._v("CatsController")]),t._v(". Контроллеры должны обрабатывать HTTP-запросы и\nделегировать более сложные задачи "),a("em",[t._v("провайдерам")]),t._v(". Провайдеры - это обычные классы JavaScript, которые объявляются в\n"),a("a",{attrs:{href:"/modules"}},[t._v("модуле")]),t._v(" как "),a("code",[t._v("providers")]),t._v(".")]),t._v(" "),a("blockquote",[a("p",[t._v("Поскольку Nest дает возможность проектировать и организовывать зависимости более OO-способом, мы настоятельно\nрекомендуем следовать принципам SOLID.")])]),t._v(" "),a("h2",{attrs:{id:"сервисы"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#сервисы"}},[t._v("#")]),t._v(" Сервисы")]),t._v(" "),a("p",[t._v("Давайте начнем с создания простого сервиса "),a("code",[t._v("CatsService")]),t._v(". Этот сервис будет отвечать за хранение и получение данных и\nпредназначен для использования контроллером "),a("code",[t._v("CatsController")]),t._v(", поэтому он является хорошим кандидатом на определение в\nкачестве провайдера.")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("cats.service.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Injectable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Cat "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./interfaces/cat.interface'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Injectable")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CatsService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" cats"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Cat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Cat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Cat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Чтобы создать сервис с помощью CLI, просто выполните команду "),a("code",[t._v("$ nest g service cats")])])]),t._v(" "),a("p",[t._v("Наш "),a("code",[t._v("CatsService")]),t._v(" - это базовый класс с одним свойством и двумя методами. Единственной новой особенностью является то,\nчто он использует декоратор "),a("code",[t._v("@Injectable()")]),t._v(". Декоратор "),a("code",[t._v("@Injectable()")]),t._v(" объявляет, что\n"),a("code",[t._v("CatsService")]),t._v(" - это класс, которым может управлять IoC-контейнер Nest. Кстати, в этом примере также используется\nинтерфейс "),a("code",[t._v("Cat")]),t._v(", который, вероятно, выглядит примерно так:")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("interfaces/cat.interface.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  breed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Теперь, когда у нас есть класс сервиса для получения кошек, давайте используем его внутри "),a("code",[t._v("CatsController")]),t._v(":")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("cats.controller.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Controller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Body "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CreateCatDto "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dto/create-cat.dto'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CatsService "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./cats.service'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Cat "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./interfaces/cat.interface'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cats'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CatsController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" catsService"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CatsService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Post")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Body")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" createCatDto"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CreateCatDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("catsService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("createCatDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Cat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("catsService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("CatsService")]),t._v(" инжектируется через конструктор класса. Обратите внимание на использование синтаксиса "),a("code",[t._v("private")]),t._v(".\nЭто сокращение позволяет нам и объявить, и инициализировать "),a("code",[t._v("catsService")]),t._v(" сразу в одном и том же месте.")]),t._v(" "),a("h2",{attrs:{id:"внедрение-зависимостеи-dependency-injection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#внедрение-зависимостеи-dependency-injection"}},[t._v("#")]),t._v(" Внедрение зависимостей (Dependency injection)")]),t._v(" "),a("p",[t._v("Nest построен на основе классного паттерна проектирования, известного как внедрение зависимостей.\nМы рекомендуем прочитать большую статью об этой концепции в официальной документации\n"),a("a",{attrs:{href:"https://angular.io/guide/dependency-injection",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("В Nest, благодаря возможностям TypeScript, очень легко управлять зависимостями, поскольку они разрешаются просто\nпо типу. В приведенном ниже примере Nest разрешит зависимость "),a("code",[t._v("catsService")]),t._v(", создав и вернув экземпляр\n"),a("code",[t._v("CatsService")]),t._v(" (или, в обычном случае синглтона, вернув существующий экземпляр, если он уже был запрошен\nв другом месте). Эта зависимость разрешается и передается в конструктор вашего контроллера\n(или присваивается указанному свойству):")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" catsService"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CatsService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"scopes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scopes"}},[t._v("#")]),t._v(" Scopes")]),t._v(" "),a("p",[t._v('Провайдеры обычно имеют время жизни ("scope"), синхронизированное с жизненным циклом приложения.\nКогда приложение загружается, каждая зависимость должна быть разрешена, и поэтому каждый провайдер должен быть\nинициализирован. Аналогично, при завершении работы приложения каждый провайдер будет уничтожен. Однако существуют\nспособы сделать так, чтобы время жизни провайдера также зависело от запросов. Подробнее об этих способах\nвы можете прочитать '),a("RouterLink",{attrs:{to:"/guide/fundamentals/injection-scopes.html"}},[t._v("здесь")]),t._v(".")],1),t._v(" "),a("demo-component"),t._v(" "),a("h2",{attrs:{id:"пользовательские-проваидеры"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#пользовательские-проваидеры"}},[t._v("#")]),t._v(" Пользовательские провайдеры")]),t._v(" "),a("p",[t._v('Nest имеет встроенный контейнер инверсии управления ("IoC"), который разрешает отношения между провайдерами.\nЭта функция лежит в основе функции dependency injection, описанной выше, но на самом деле она гораздо мощнее,\nчем то, что мы описали до сих пор. Существует несколько способов определения провайдера: вы можете использовать\nпростые значения, классы, асинхронные или синхронные фабрики. Больше примеров приведено '),a("RouterLink",{attrs:{to:"/guide/fundamentals/custom-providers.html"}},[t._v("здесь")]),t._v(".")],1),t._v(" "),a("h2",{attrs:{id:"необязательные-проваидеры"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#необязательные-проваидеры"}},[t._v("#")]),t._v(" Необязательные провайдеры")]),t._v(" "),a("p",[t._v("Иногда у вас могут быть зависимости, которые не обязательно должны быть разрешены. Например, ваш класс может зависеть\nот объекта конфигурации, но если он не передан, то следует использовать значения по умолчанию. В таком случае\nзависимость становится необязательной, поскольку отсутствие провайдера конфигурации не приведет к ошибкам.")]),t._v(" "),a("p",[t._v("Чтобы указать, что провайдер является необязательным, используйте декоратор "),a("code",[t._v("@Optional()")]),t._v(" в аргументах конструктора.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Injectable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Optional"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Inject "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Injectable")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpService"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Optional")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Inject")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HTTP_OPTIONS'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" httpClient"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Обратите внимание, что в приведенном примере мы используем пользовательский провайдер, и именно поэтому мы включаем\nпользовательский маркер "),a("code",[t._v("HTTP_OPTIONS")]),t._v(". Предыдущие примеры показывали инъекцию на основе конструктора, указывающую\nна зависимость через класс в конструкторе. Подробнее о пользовательских провайдерах читайте "),a("RouterLink",{attrs:{to:"/guide/fundamentals/custom-providers.html"}},[t._v("здесь")]),t._v(".")],1),t._v(" "),a("h2",{attrs:{id:"инъекция-на-основе-своиств"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#инъекция-на-основе-своиств"}},[t._v("#")]),t._v(" Инъекция на основе свойств")]),t._v(" "),a("p",[t._v("Техника, которую мы использовали до сих пор, называется инъекцией на основе конструктора, поскольку провайдеры\nинжектируются через метод конструктора. В некоторых специфических случаях может оказаться полезной "),a("em",[t._v("инъекция\nна основе свойств")]),t._v(". Например, если ваш класс верхнего уровня зависит от одного или нескольких провайдеров,\nпередавать их по всему пути наверх, вызывая "),a("code",[t._v("super()")]),t._v(" в подклассах из конструктора, может быть очень утомительно.\nЧтобы избежать этого, вы можете использовать декоратор "),a("code",[t._v("@Inject()")]),t._v(" на уровне свойств.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Injectable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Inject "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Injectable")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpService"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Inject")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HTTP_OPTIONS'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" httpClient"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Если ваш класс не расширяет другой провайдер, вы всегда должны использовать инъекции на основе конструктора.")])]),t._v(" "),a("h2",{attrs:{id:"регистрация-проваидера"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#регистрация-проваидера"}},[t._v("#")]),t._v(" Регистрация провайдера")]),t._v(" "),a("p",[t._v("Теперь, когда мы определили провайдера ("),a("code",[t._v("CatsService")]),t._v(") и у нас есть контроллер ("),a("code",[t._v("CatsController")]),t._v("),\nнам нужно зарегистрировать сервис в Nest, чтобы он мог выполнять инъекции. Для этого нужно отредактировать файл\nнашего модуля ("),a("code",[t._v("app.module.ts")]),t._v(") и добавить сервис в массив "),a("code",[t._v("providers")]),t._v(" декоратора "),a("code",[t._v("@Module()")]),t._v(".")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("app.module.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Module "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CatsController "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./cats/cats.controller'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CatsService "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./cats/cats.service'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Module")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  controllers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CatsController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  providers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CatsService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppModule")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Теперь Nest сможет разрешить зависимости класса "),a("code",[t._v("CatsController")]),t._v(".")]),t._v(" "),a("p",[t._v("Вот так теперь должна выглядеть наша структура каталогов:")]),t._v(" "),a("div",{staticClass:"file-tree"},[a("div",{staticClass:"item"},[t._v("src")]),t._v(" "),a("div",{staticClass:"children"},[a("div",{staticClass:"item"},[t._v("cats")]),t._v(" "),a("div",{staticClass:"children"},[a("div",{staticClass:"item"},[t._v("dto")]),t._v(" "),a("div",{staticClass:"children"},[a("div",{staticClass:"item"},[t._v("create-cat.dto.ts")])]),t._v(" "),a("div",{staticClass:"item"},[t._v("interfaces")]),t._v(" "),a("div",{staticClass:"children"},[a("div",{staticClass:"item"},[t._v("cat.interface.ts")])]),t._v(" "),a("div",{staticClass:"item"},[t._v("cats.controller.ts")]),t._v(" "),a("div",{staticClass:"item"},[t._v("cats.service.ts")])]),t._v(" "),a("div",{staticClass:"item"},[t._v("app.module.ts")]),t._v(" "),a("div",{staticClass:"item"},[t._v("main.ts")])])]),t._v(" "),a("h2",{attrs:{id:"ручное-создание-экземпляров"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ручное-создание-экземпляров"}},[t._v("#")]),t._v(" Ручное создание экземпляров")]),t._v(" "),a("p",[t._v("До сих пор мы обсуждали, как Nest автоматически обрабатывает большинство деталей разрешения зависимостей.\nВ некоторых случаях вам может потребоваться выйти за рамки встроенной системы Dependency Injection и вручную\nполучить или создать экземпляр провайдера. Ниже мы кратко рассмотрим две такие темы.")]),t._v(" "),a("p",[t._v("Чтобы получить существующие экземпляры или создать экземпляр провайдера динамически, вы можете использовать\n"),a("RouterLink",{attrs:{to:"/guide/fundamentals/module-ref.html"}},[t._v("ссылку на модуль")]),t._v(".")],1),t._v(" "),a("p",[t._v("Для получения провайдеров в функции "),a("code",[t._v("bootstrap()")]),t._v(" (например, для автономных (stanalone) приложений без контроллеров или для\nиспользования службы конфигурации во время загрузки) смотрите раздел "),a("a",{attrs:{href:"https://docs.nestjs.com/standalone-applications",target:"_blank",rel:"noopener noreferrer"}},[t._v("Автономные приложения"),a("OutboundLink")],1),t._v(".")])],1)}),[],!1,null,null,null);s.default=e.exports}}]);