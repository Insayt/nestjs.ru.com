(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{405:function(t,s,a){"use strict";a.r(s);var n=a(54),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"контроллеры"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#контроллеры"}},[t._v("#")]),t._v(" Контроллеры")]),t._v(" "),a("p",[t._v("Контроллеры отвечают за обработку входящих "),a("strong",[t._v("запросов (Request)")]),t._v(" и возврат "),a("strong",[t._v("ответов (Response)")]),t._v(" клиенту.")]),t._v(" "),a("img",{attrs:{src:"/Controllers_1.png"}}),t._v(" "),a("p",[t._v("Назначение контроллера - принимать определенные запросы для приложения.\nМеханизм "),a("strong",[t._v("маршрутизации")]),t._v(" контролирует, какой контроллер получает какие запросы.\nЧасто каждый контроллер имеет более одного маршрута, и разные маршруты могут выполнять\nразные действия.")]),t._v(" "),a("p",[t._v("Чтобы создать базовый контроллер, мы используем классы и "),a("strong",[t._v("декораторы")]),t._v('.\nДекораторы связывают классы с необходимыми метаданными и позволяют Nest "смапить" маршруты\n(привязать запросы к соответствующим контроллерам).')]),t._v(" "),a("blockquote",[a("p",[t._v("Для быстрого создания CRUD-контроллера\nсо встроенной "),a("a",{attrs:{href:"https://docs.nestjs.com/techniques/validation",target:"_blank",rel:"noopener noreferrer"}},[t._v("валидацией"),a("OutboundLink")],1),t._v(",\nвы можете использовать "),a("a",{attrs:{href:"https://docs.nestjs.com/recipes/crud-generator#crud-generator",target:"_blank",rel:"noopener noreferrer"}},[t._v("CRUD-генератор"),a("OutboundLink")],1),t._v("\nCLI: "),a("code",[t._v("nest g resource [name]")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"маршрутизация"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#маршрутизация"}},[t._v("#")]),t._v(" Маршрутизация")]),t._v(" "),a("p",[t._v("В следующем примере мы будем использовать декоратор "),a("code",[t._v("@Controller()")]),t._v(", который "),a("strong",[t._v("обязателен")]),t._v("\nдля определения базового контроллера. Мы укажем необязательный префикс пути маршрута "),a("code",[t._v("cats")]),t._v(".\nИспользование префикса пути в декораторе "),a("code",[t._v("@Controller()")]),t._v(" позволяет нам легко группировать набор\nсвязанных маршрутов и минимизировать повторяющийся код. Например, мы можем сгруппировать\nнабор маршрутов, управляющих взаимодействием с сущностью клиента, под маршрутом "),a("code",[t._v("/customers")]),t._v(".\nВ этом случае мы можем указать префикс пути "),a("code",[t._v("customers")]),t._v(" в декораторе "),a("code",[t._v("@Controller()")]),t._v(", чтобы\nне повторять эту часть пути для каждого маршрута в файле.")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("cats.controller.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Controller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Get "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cats'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CatsController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This action returns all cats'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Чтобы создать контроллер с помощью CLI, просто выполните команду "),a("code",[t._v("$ nest g controller cats")]),t._v(".")])]),t._v(" "),a("p",[t._v("Декоратор "),a("code",[t._v("@Get()")]),t._v(" перед методом "),a("code",[t._v("findAll()")]),t._v(" указывает Nest на создание обработчика\nдля определенного HTTP-запроса. Имя декоратора соответствует методу запроса HTTP\n(в данном случае GET) и пути маршрута. Что такое путь маршрута? Путь маршрута для\nобработчика определяется путем объединения (необязательного) префикса, объявленного\nдля контроллера, и любого пути, указанного в декораторе метода. Поскольку мы объявили\nпрефикс для каждого маршрута ( "),a("code",[t._v("cats")]),t._v(") и не добавили никакой информации о пути в декораторе, Nest будет\nсопоставлять запросы "),a("code",[t._v("GET /cats")]),t._v(" с этим обработчиком. Как уже упоминалось, путь включает в себя необязательный\nпрефикс пути контроллера "),a("strong",[t._v("и")]),t._v(" любую строку пути, объявленную в декораторе метода запроса.\nНапример, префикс пути "),a("code",[t._v("customers")]),t._v(" в сочетании с декоратором "),a("code",[t._v("@Get('profile')")]),t._v(" вызовет данный метод\nдля запроса "),a("code",[t._v("GET /customers/profile")]),t._v(".")]),t._v(" "),a("p",[t._v("В нашем примере выше, когда GET-запрос делается к этой конечной точке, Nest направляет запрос к нашему\nпользовательскому методу "),a("code",[t._v("findAll()")]),t._v(". Обратите внимание, что имя метода, которое мы выбрали здесь,\nсовершенно произвольно. Очевидно, что мы должны объявить метод для привязки маршрута, но Nest не\nпридает никакого значения выбранному имени метода.")]),t._v(" "),a("p",[t._v("Этот метод вернет код состояния 200 и соответствующий ответ, который в данном случае является просто строкой.\nПочему так происходит? Чтобы объяснить, мы сначала представим концепцию, что Nest использует два "),a("strong",[t._v("различных")]),t._v("\nварианта для манипулирования ответами:")]),t._v(" "),a("table",[a("tr",[a("td",[t._v("Стандартный (рекомендуется)")]),t._v(" "),a("td",[t._v("\n        Используя этот встроенный метод, когда обработчик запроса возвращает объект \n        JavaScript или массив, он будет "),a("strong",[t._v("автоматически")]),t._v(" сериализован в JSON. Однако если он возвращает \n        примитивный тип \n        JavaScript (например, "),a("code",[t._v("string")]),t._v(", "),a("code",[t._v("number")]),t._v(", "),a("code",[t._v("boolean")]),t._v("), Nest отправит только значение, \n        не пытаясь его сериализовать. \n        Это делает обработку ответа простой: просто верните значение, а Nest позаботится обо всем остальном.\n        "),a("br"),t._v(" "),a("br"),t._v("\n        Кроме того, код состояния ответа по умолчанию всегда равен 200, за исключением POST-запросов, которые \n        используют 201. Мы можем легко изменить это поведение, добавив декоратор "),a("code",[t._v("@HttpCode(...)")]),t._v(" на уровне обработчика \n        (см. "),a("a",{attrs:{href:"controllers#status-code"}},[t._v("Коды состояния")]),t._v(").\n    ")])]),t._v(" "),a("tr",[a("td",[t._v("Специфический для библиотеки")]),t._v(" "),a("td",[t._v("\n        Мы можем использовать специфичный для библиотеки (например, Express) \n        "),a("a",{attrs:{href:"https://expressjs.com/en/api.html#res",rel:"nofollow",target:"_blank"}},[t._v("объект ответа")]),t._v(", который можно внедрить \n        с помощью декоратора "),a("code",[t._v("@Res()")]),t._v(" в аргументы обработчика метода (например, "),a("code",[t._v("findAll(@Res() response) ")]),t._v("). \n        При таком подходе у вас есть возможность использовать собственные методы обработки ответа, представленные этим объектом. \n        Например, в Express вы можете создавать ответы с помощью метода "),a("code",[t._v("response.status(200).send()")]),t._v(".\n    ")])])]),t._v(" "),a("demo-component"),t._v(" "),a("h2",{attrs:{id:"объект-запроса"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#объект-запроса"}},[t._v("#")]),t._v(" Объект запроса")]),t._v(" "),a("p",[t._v("Обработчикам часто требуется доступ к объекту "),a("strong",[t._v("Request")]),t._v(". Nest предоставляет\nдоступ к "),a("a",{attrs:{href:"https://expressjs.com/en/api.html#req",target:"_blank",rel:"noopener noreferrer"}},[t._v("объекту Request"),a("OutboundLink")],1),t._v(" базовой платформы (по умолчанию Express).\nМы можем получить доступ к объекту запроса, попросив Nest внедрить его, добавив декоратор "),a("code",[t._v("@Req()")]),t._v(" перед обработчиком.")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("cats.controller.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Controller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Req "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Request "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cats'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CatsController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Req")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This action returns all cats'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Для того, чтобы воспользоваться typescript типами фреймворка "),a("code",[t._v("express")]),t._v(" (как в примере с параметром "),a("code",[t._v("request: Request")]),t._v(" выше), установите пакет "),a("code",[t._v("@types/express")]),t._v(".")])]),t._v(" "),a("p",[t._v("Объект request представляет HTTP-запрос и имеет свойства для доступа к параметрам запроса, HTTP-заголовкам и телу запроса\n(подробнее "),a("a",{attrs:{href:"https://expressjs.com/en/api.html#req",target:"_blank",rel:"noopener noreferrer"}},[t._v("здесь"),a("OutboundLink")],1),t._v("). В большинстве случаев нет необходимости получать эти\nсвойства вручную. Вместо этого мы можем использовать специальные декораторы, такие как "),a("code",[t._v("@Body()")]),t._v(" или "),a("code",[t._v("@Query()")]),t._v(",\nкоторые доступны из коробки. Ниже приведен список предоставляемых декораторов и объектов, специфичных для\nконкретной платформы, которые они представляют.")]),t._v(" "),a("table",[a("tbody",[a("tr",[a("td",[a("code",[t._v("@Request(), @Req()")])]),t._v(" "),a("td",[a("code",[t._v("req")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Response(), @Res()")]),a("span",{staticClass:"table-code-asterisk"},[t._v("*")])]),t._v(" "),a("td",[a("code",[t._v("res")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Next()")])]),t._v(" "),a("td",[a("code",[t._v("next")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Session()")])]),t._v(" "),a("td",[a("code",[t._v("req.session")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Param(key?: string)")])]),t._v(" "),a("td",[a("code",[t._v("req.params")]),t._v(" / "),a("code",[t._v("req.params[key]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Body(key?: string)")])]),t._v(" "),a("td",[a("code",[t._v("req.body")]),t._v(" / "),a("code",[t._v("req.body[key]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Query(key?: string)")])]),t._v(" "),a("td",[a("code",[t._v("req.query")]),t._v(" / "),a("code",[t._v("req.query[key]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Headers(name?: string)")])]),t._v(" "),a("td",[a("code",[t._v("req.headers")]),t._v(" / "),a("code",[t._v("req.headers[name]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Ip()")])]),t._v(" "),a("td",[a("code",[t._v("req.ip")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@HostParam()")])]),t._v(" "),a("td",[a("code",[t._v("req.hosts")])])])])]),t._v(" "),a("p",[a("sup",[t._v("* ")]),t._v("Для совместимости с типами, используемыми в базовых фреймворках HTTP (например, Express и Fastify), Nest предоставляет\nдекораторы "),a("code",[t._v("@Res()")]),t._v(" и "),a("code",[t._v("@Response()")]),t._v(". "),a("code",[t._v("@Res()")]),t._v(" - это просто псевдоним для "),a("code",[t._v("@Response()")]),t._v(". Оба декоратора по сути дублируют\nбазовый интерфейс объекта "),a("code",[t._v("response")]),t._v(" родной платформы. При их использовании следует также импортировать\nтипы для базовой библиотеки (например, "),a("code",[t._v("@types/express")]),t._v("), чтобы воспользоваться всеми преимуществами. Обратите внимание,\nчто когда вы вставляете "),a("code",[t._v("@Res()")]),t._v(" или "),a("code",[t._v("@Response()")]),t._v(" в обработчик метода, вы переводите Nest в режим, специфичный для\nбиблиотеки, и становитесь ответственным за управление ответом. При этом вы должны выдать какой-то ответ, сделав\nвызов объекта "),a("code",[t._v("response")]),t._v(" (например, "),a("code",[t._v("res.json(...)")]),t._v(" или "),a("code",[t._v("res.send(...)")]),t._v("), иначе HTTP-сервер зависнет.")]),t._v(" "),a("blockquote",[a("p",[t._v("Чтобы узнать, как создавать собственные пользовательские декораторы, посетите "),a("a",{attrs:{href:"/custom-decorators"}},[t._v("эту")]),t._v(" главу.")])]),t._v(" "),a("h2",{attrs:{id:"ресурсы"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ресурсы"}},[t._v("#")]),t._v(" Ресурсы")]),t._v(" "),a("p",[t._v("Ранее мы определили маршрут для получения ресурса "),a("code",[t._v("cats")]),t._v(" (маршрут "),a("strong",[t._v("GET")]),t._v("). Обычно нам так же нужен\nмаршрут, который создает новые записи. Для этого создадим обработчик "),a("strong",[t._v("POST")]),t._v(":")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("cats.controller.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Controller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Post "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cats'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CatsController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Post")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This action adds a new cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This action returns all cats'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Все очень просто. Nest предоставляет декораторы для всех стандартных методов HTTP: "),a("code",[t._v("@Get()")]),t._v(", "),a("code",[t._v("@Post()")]),t._v(", "),a("code",[t._v("@Put()")]),t._v(",\n"),a("code",[t._v("@Delete()")]),t._v(", "),a("code",[t._v("@Patch()")]),t._v(", "),a("code",[t._v("@Options()")]),t._v(", и "),a("code",[t._v("@Head()")]),t._v(". Кроме того, "),a("code",[t._v("@All()")]),t._v(" определяет маршрут, который\nобрабатывает их все.")]),t._v(" "),a("h2",{attrs:{id:"шаблоны-маршрутов"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#шаблоны-маршрутов"}},[t._v("#")]),t._v(" Шаблоны маршрутов")]),t._v(" "),a("p",[t._v("Поддерживаются также маршруты, основанные на шаблонах. Например, звездочка используется в качестве подстановочного\nзнака и будет соответствовать любой комбинации символов.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ab*cd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This route uses a wildcard'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Маршрутный путь "),a("code",[t._v("'ab*cd'")]),t._v(" будет соответствовать "),a("code",[t._v("abcd")]),t._v(", "),a("code",[t._v("ab_cd")]),t._v(", "),a("code",[t._v("abecd")]),t._v(" и так далее. Символы "),a("code",[t._v("?")]),t._v(", "),a("code",[t._v("+")]),t._v(", "),a("code",[t._v("*")]),t._v(" и "),a("code",[t._v("()")]),t._v("\nмогут использоваться в маршрутном пути и являются подмножествами своих аналогов в регулярных выражениях.\nДефис ("),a("code",[t._v("-")]),t._v(") и точка ("),a("code",[t._v(".")]),t._v(") интерпретируются буквально в строковых путях.")]),t._v(" "),a("h2",{attrs:{id:"код-статуса"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#код-статуса"}},[t._v("#")]),t._v(" Код статуса")]),t._v(" "),a("p",[t._v("Как уже упоминалось, код ("),a("strong",[t._v("status code")]),t._v(") ответа по умолчанию всегда "),a("strong",[t._v("200")]),t._v(", за исключением POST-запросов, которые\nотдают "),a("strong",[t._v("201")]),t._v(". Мы можем легко изменить это поведение, добавив декоратор "),a("code",[t._v("@HttpCode(...)")]),t._v(" на уровне обработчика.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Post")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HttpCode")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("204")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This action adds a new cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Импортируйте "),a("code",[t._v("HttpCode")]),t._v(" из пакета "),a("code",[t._v("@nestjs/common")]),t._v(".")])]),t._v(" "),a("p",[t._v("Часто "),a("strong",[t._v("status code")]),t._v(" не статичен, а зависит от различных факторов. В этом случае вы можете использовать\nспецифичный для библиотеки "),a("strong",[t._v("response")]),t._v(" объект (с помощью "),a("code",[t._v("@Res()")]),t._v("), или в случае ошибки, выбросить исключение.")]),t._v(" "),a("h2",{attrs:{id:"заголовки"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#заголовки"}},[t._v("#")]),t._v(" Заголовки")]),t._v(" "),a("p",[t._v("Чтобы указать пользовательский заголовок ответа, вы можете использовать либо декоратор "),a("code",[t._v("@Header()")]),t._v(", либо специфический\nдля библиотеки объект "),a("code",[t._v("response")]),t._v(" (и вызвать "),a("code",[t._v("res.header()")]),t._v(" напрямую).")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Post")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Header")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cache-Control'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'none'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This action adds a new cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Импортируйте "),a("code",[t._v("Header")]),t._v(" из пакета "),a("code",[t._v("@nestjs/common")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"редирект"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#редирект"}},[t._v("#")]),t._v(" Редирект")]),t._v(" "),a("p",[t._v("Чтобы сделать редирект ответа на определенный URL, вы можете использовать либо декоратор "),a("code",[t._v("@Redirect()")]),t._v(", либо специфический\nдля библиотеки объект "),a("code",[t._v("response")]),t._v(" (и вызвать "),a("code",[t._v("res.redirect()")]),t._v(" напрямую).")]),t._v(" "),a("p",[a("code",[t._v("@Redirect()")]),t._v(" принимает два аргумента, "),a("code",[t._v("url")]),t._v(" и "),a("code",[t._v("statusCode")]),t._v(", оба необязательны. Значение по умолчанию "),a("code",[t._v("statusCode")]),t._v("\nравно "),a("code",[t._v("302")]),t._v(" ("),a("code",[t._v("Found")]),t._v("), если оно опущено.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Redirect")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://nestjs.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Иногда вам может понадобиться определить HTTP код ответа или URL редиректа динамически. Сделайте это\nпросто вернув подобный объект из метода обработчика маршрута:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"statusCode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Возвращаемые значения будут переопределять любые аргументы, переданные декоратору "),a("code",[t._v("@Redirect()")]),t._v(". Например:")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Redirect")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://docs.nestjs.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("302")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDocs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Query")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'version'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("version "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" version "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://docs.nestjs.com/v5/'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Нас отправит на https://docs.nestjs.com/v5/")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"параметры-маршрута"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#параметры-маршрута"}},[t._v("#")]),t._v(" Параметры маршрута")]),t._v(" "),a("p",[t._v("Маршруты со статическими путями не будут работать, когда вам нужно принять "),a("strong",[t._v("динамические данные")]),t._v(" как часть\nзапроса (например, "),a("code",[t._v("GET /cats/1")]),t._v(" для получения кошки с id "),a("code",[t._v("1")]),t._v("). Чтобы определить маршруты с параметрами,\nмы можем добавить "),a("strong",[t._v("названия")]),t._v(" параметров в путь маршрута для захвата динамического значения в данной\nпозиции в URL запроса. Название параметра в примере декоратора "),a("code",[t._v("@Get()")]),t._v(" ниже демонстрирует такое использование.\nК параметрам маршрута, объявленным таким образом, можно получить доступ с помощью декоратора "),a("code",[t._v("@Param()")]),t._v(", который\nследует добавить в аргументы метода.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("':id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Param")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("This action returns a #")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" cat")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("@Param()")]),t._v(" используется для декорирования параметра метода ("),a("code",[t._v("params")]),t._v(" в примере выше) и делает параметры "),a("strong",[t._v("маршрута")]),t._v("\nдоступными как свойства этого параметра внутри тела метода. Как видно из приведенного выше кода,\nмы можем получить доступ к параметру "),a("code",[t._v("id")]),t._v(", обратившись к "),a("code",[t._v("params.id")]),t._v(". Вы также можете передать в декоратор "),a("code",[t._v("@Param")]),t._v(" определенное\nназвание параметра, а затем ссылаться на параметр маршрута непосредственно по имени в теле метода.")]),t._v(" "),a("blockquote",[a("p",[t._v("Импортируйте "),a("code",[t._v("Param")]),t._v(" из пакета "),a("code",[t._v("@nestjs/common")]),t._v(".")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("':id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Param")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("This action returns a #")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" cat")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"маршрутизация-по-субдоменам"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#маршрутизация-по-субдоменам"}},[t._v("#")]),t._v(" Маршрутизация по субдоменам")]),t._v(" "),a("p",[t._v("Декоратор "),a("code",[t._v("@Controller")]),t._v(" может принимать опцию "),a("code",[t._v("host")]),t._v(", чтобы проверить, что HTTP-хост входящих запросов\nсоответствует некоторому определенному значению.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin.example.com'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AdminController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Admin page'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Поскольку "),a("strong",[t._v("Fastify")]),t._v(" не поддерживает вложенные маршрутизаторы, при использовании поддоменной маршрутизации вместо\nнего следует использовать (по умолчанию) адаптер Express.")])]),t._v(" "),a("p",[t._v("Подобно маршрутному пути, параметр "),a("code",[t._v("hosts")]),t._v(" может использовать шаблоны для захвата динамического значения в данной\nпозиции имени хоста. Шаблон параметра"),a("code",[t._v("host")]),t._v(" в примере декоратора "),a("code",[t._v("@Controller()")]),t._v(" ниже, демонстрирует такое\nиспользование. К параметрам хоста, объявленным таким образом, можно получить доступ с помощью декоратора\n"),a("code",[t._v("@HostParam()")]),t._v(", который должен быть добавлен в аргументы метода.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("':account.example.com'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HostParam")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" account"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" account"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"scopes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scopes"}},[t._v("#")]),t._v(" Scopes")]),t._v(" "),a("p",[t._v("Для людей, изучающих разные языки программирования, может удивить, что в Nest почти все разделяется\nмежду входящими запросами. У нас есть пул соединений с базой данных, синглтон-сервисы с глобальным состоянием и т.д.\nПомните, что Node.js не следует Multi-Threaded Stateless Model, в которой каждый запрос обрабатывается\nотдельным потоком (как в php). Следовательно, использование экземпляров синглтонов полностью "),a("strong",[t._v("безопасно")]),t._v(" для наших приложений.")]),t._v(" "),a("p",[t._v("Однако существуют случаи, когда время жизни контроллера только на время запроса может быть нужно,\nнапример, кэширование по каждому запросу в GraphQL-приложениях, отслеживание запросов или многопоточность. Узнайте,\nкак управлять scopes "),a("RouterLink",{attrs:{to:"/guide/fundamentals/injection-scopes.html"}},[t._v("здесь")]),t._v(".")],1),t._v(" "),a("h2",{attrs:{id:"асинхронность"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#асинхронность"}},[t._v("#")]),t._v(" Асинхронность")]),t._v(" "),a("p",[t._v("Мы любим современный JavaScript и знаем, что извлечение данных в основном "),a("strong",[t._v("асинхронно")]),t._v(". Поэтому Nest\nподдерживает и хорошо работает с синтаксисом "),a("code",[t._v("async")]),t._v(".")]),t._v(" "),a("blockquote",[a("p",[t._v("Подробнее о синтаксисе "),a("code",[t._v("async / await")]),t._v(" "),a("a",{attrs:{href:"https://learn.javascript.ru/async-await",target:"_blank",rel:"noopener noreferrer"}},[t._v("здесь"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("Каждая асинхронная функция должна возвращать "),a("code",[t._v("Promise")]),t._v(". Это означает, что вы можете вернуть "),a("code",[t._v("deferred")]),t._v(" значение,\nкоторое Nest сможет зарезолвить самостоятельно. Давайте посмотрим пример этого:")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("cats.controller.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Приведенный выше код полностью корректен. Более того, обработчики маршрутов Nest стали еще мощнее,\nпоскольку могут возвращать RxJS "),a("a",{attrs:{href:"http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("observable streams"),a("OutboundLink")],1),t._v(".\nNest автоматически подпишется на источник и возьмет последнее выданное значение (как только поток будет завершен).")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("cats.controller.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Observable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Оба вышеуказанных подхода работают, и вы можете использовать тот, который соответствует вашим требованиям.")]),t._v(" "),a("h2",{attrs:{id:"тело-запроса"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#тело-запроса"}},[t._v("#")]),t._v(" Тело запроса")]),t._v(" "),a("p",[t._v("Наш предыдущий пример обработчика маршрута POST не принимал никаких данных от клиента. Давайте исправим это,\nдобавив сюда декоратор "),a("code",[t._v("@Body()")]),t._v(".")]),t._v(" "),a("p",[t._v("Но сначала (если вы используете TypeScript) нам нужно определить схему "),a("strong",[t._v("DTO")]),t._v(" (Data Transfer Object).\nDTO - это объект, который определяет, как данные будут передаваться по сети. Мы можем определить схему DTO,\nиспользуя "),a("strong",[t._v("TypeScript")]),t._v(" интерфейсы или простые классы. Интересно, что здесь мы рекомендуем использовать "),a("strong",[t._v("классы")]),t._v(".\nПочему? Классы являются частью стандарта JavaScript ES6, и поэтому они сохраняются как реальные сущности в\nскомпилированном JavaScript. С другой стороны, поскольку интерфейсы TypeScript удаляются при трайнспайлинге, Nest\nне может ссылаться на них во время выполнения. Это важно, поскольку такие функции, как "),a("strong",[t._v("Pipes")]),t._v(", предоставляют\nдополнительные возможности, когда они имеют доступ к метатипу переменной во время выполнения.")]),t._v(" "),a("p",[t._v("Давайте создадим класс "),a("code",[t._v("CreateCatDto")]),t._v(":")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("create-cat.dto")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreateCatDto")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  breed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Он имеет только три основных свойства. После этого мы можем использовать созданный DTO внутри "),a("code",[t._v("CatsController")]),t._v(":")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("create-cat.dto")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Post")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Body")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" createCatDto"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CreateCatDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This action adds a new cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Наш "),a("code",[t._v("ValidationPipe")]),t._v(" может отфильтровывать свойства, которые не должны быть получены обработчиком метода.\nВ этом случае мы можем составить белый список допустимых свойств, и любое свойство, не включенное в белый список,\nбудет автоматически удалено из результирующего объекта. В примере "),a("code",[t._v("CreateCatDto")]),t._v(", наш белый список - это\nсвойства "),a("code",[t._v("name")]),t._v(", "),a("code",[t._v("age")]),t._v(" и "),a("code",[t._v("breed")]),t._v(". Подробнее "),a("a",{attrs:{href:"https://docs.nestjs.com/techniques/validation#stripping-properties",target:"_blank",rel:"noopener noreferrer"}},[t._v("здесь"),a("OutboundLink")],1),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"обработка-ошибок"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#обработка-ошибок"}},[t._v("#")]),t._v(" Обработка ошибок")]),t._v(" "),a("p",[t._v("Отдельная глава посвящена обработке ошибок (т.е. работе с исключениями) "),a("a",{attrs:{href:"/exception-filters"}},[t._v("здесь")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"пример-контроллера"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#пример-контроллера"}},[t._v("#")]),t._v(" Пример контроллера")]),t._v(" "),a("p",[t._v("Ниже приведен пример, который использует несколько доступных декораторов для создания базового контроллера.\nЭтот контроллер предоставляет методы для доступа и манипулирования внутренними данными.")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("cats.controller.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Controller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Put"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Delete "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CreateCatDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UpdateCatDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ListAllEntities "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dto'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cats'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CatsController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Post")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Body")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" createCatDto"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CreateCatDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This action adds a new cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Query")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" query"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ListAllEntities"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("This action returns all cats (limit: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("limit"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" items)")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("':id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Param")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("This action returns a #")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" cat")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Put")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("':id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Param")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Body")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" updateCatDto"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateCatDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("This action updates a #")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" cat")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Delete")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("':id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Param")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("This action removes a #")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" cat")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Nest CLI предоставляет генератор (схему), который автоматически генерирует "),a("strong",[t._v("все шаблоны кода")]),t._v(",\nчтобы нам не приходилось писать их руками. Подробнее об этой возможности\nчитайте "),a("a",{attrs:{href:"/recipes/crud-generator"}},[t._v("здесь")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"начало-работы"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#начало-работы"}},[t._v("#")]),t._v(" Начало работы")]),t._v(" "),a("p",[t._v("Когда мы полностью описали наш контроллер - Nest все еще не знает о существовании "),a("code",[t._v("CatsController")]),t._v(" и, как следствие,\nне создает экземпляр этого класса.")]),t._v(" "),a("p",[t._v("Контроллеры всегда связаны с модулем, поэтому мы включаем массив "),a("code",[t._v("controllers")]),t._v(" в декоратор "),a("code",[t._v("@Module()")]),t._v(".\nПоскольку мы еще не определили никаких других модулей, кроме корневого "),a("code",[t._v("AppModule")]),t._v(", мы используем его для\nпривязки "),a("code",[t._v("CatsController")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("@"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filename")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Module "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CatsController "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./cats/cats.controller'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Module")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  controllers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CatsController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppModule")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Мы прикрепили метаданные к классу модуля с помощью декоратора "),a("code",[t._v("@Module()")]),t._v(", и теперь Nest может понять,\nкакие контроллеры должны быть смонтированы.")]),t._v(" "),a("demo-component"),t._v(" "),a("h2",{attrs:{id:"подход-с-учетом-специфики-библиотеки"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#подход-с-учетом-специфики-библиотеки"}},[t._v("#")]),t._v(" Подход с учетом специфики библиотеки")]),t._v(" "),a("p",[t._v("До сих пор мы обсуждали стандартный способ манипулирования ответами Nest. Второй способ манипулирования ответом\nзаключается в использовании специфического для библиотеки "),a("a",{attrs:{href:"https://expressjs.com/en/api.html#res",target:"_blank",rel:"noopener noreferrer"}},[t._v("объекта response"),a("OutboundLink")],1),t._v(".\nЧтобы внедрить конкретный объект ответа, нам нужно использовать декоратор "),a("code",[t._v("@Res()")]),t._v(". Чтобы показать разницу, давайте\nперепишем "),a("code",[t._v("CatsController")]),t._v(" следующим образом:")]),t._v(" "),a("div",{staticClass:"filename"},[t._v("cats.controller.ts")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Controller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HttpStatus "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Response "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cats'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CatsController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Post")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Res")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HttpStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CREATED")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Res")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HttpStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Хотя этот подход работает и в некоторых случаях позволяет добиться большей гибкости, предоставляя полный контроль над\nобъектом ответа (манипуляции с заголовками, специфические для библиотеки функции и так далее), его следует использовать\nс осторожностью. В целом, этот подход гораздо менее понятен и имеет некоторые недостатки. Главный недостаток\nзаключается в том, что ваш код становится платформозависимым (поскольку базовые библиотеки могут иметь различные API\nдля объекта ответа), и его сложнее тестировать.")]),t._v(" "),a("p",[t._v("Кроме того, в приведенном примере вы теряете совместимость с функциями Nest, которые зависят от стандартной обработки\nответов Nest, такими как перехватчики и декораторы "),a("code",[t._v("@HttpCode()")]),t._v(" / "),a("code",[t._v("@Header()")]),t._v(". Чтобы исправить это, вы можете\nустановить опцию "),a("code",[t._v("passthrough")]),t._v(" в значение "),a("code",[t._v("true")]),t._v(", как показано ниже:")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Res")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" passthrough"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HttpStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Теперь вы можете взаимодействовать с родным объектом ответа (например, устанавливать cookies или заголовки в\nзависимости от определенных условий), но все остальное предоставьте фреймворку.")])],1)}),[],!1,null,null,null);s.default=e.exports}}]);